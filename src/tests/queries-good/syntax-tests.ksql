--- code coverage queries
DROP STREAM IF EXISTS test DELETE TOPIC;
DROP TABLE IF EXISTS test DELETE TOPIC;
SELECT * FROM topic WINDOW TUMBLING (SIZE 1 HOUR);
EXPLAIN foo;
EXPLAIN SELECT foo->sub, avg(bar), CASE WHEN n < 1 THEN 'small' WHEN n >= 2 THEN 'large' ELSE 'medium' END AS size FROM top1 f LEFT JOIN top2 b ON (f.a=b.a) WHERE foo=1 AND bas IS NOT DISTINCT FROM time AT TIME ZONE 'Europe/London' AND bar IS NOT NULL AND age BETWEEN 9 AND 13 AND name NOT LIKE 'bob%' GROUP BY bar HAVING b.c > 1;
SELECT * FROM pageviews LIMIT 5;
SELECT localize(address->city, address->zip), ROWTIME AT TIME ZONE 'UTC' FROM pageviews LIMIT 5;
SELECT * FROM pageviews
  WHERE ROWTIME >= 1510923225000
    AND ROWTIME <= 1510923228000
  EMIT CHANGES;
LIST TOPICS;
LIST QUERIES EXTENDED;
LIST FUNCTIONS;
LIST PROPERTIES;
LIST STREAMS;
LIST TABLES;
LIST TABLES EXTENDED;
LIST SOURCE CONNECTORS;
SHOW SINK CONNECTORS;
SHOW TOPICS;
SHOW STREAMS;
SHOW TABLES;
SHOW PROPERTIES;
SHOW FUNCTIONS;
SHOW TABLES EXTENDED;
SET 'variable'='text';
UNSET 'variable';
DESCRIBE EXTENDED test;
DESCRIBE FUNCTION test;
DESCRIBE CONNECTOR foo;
TERMINATE foo;
TERMINATE QUERY foo;
RUN SCRIPT 'test';
CREATE TYPE foo AS STRUCT<time BIGINT, data MAP<STRING, INT>, values ARRAY<INT>>;
DROP TYPE foo;
PRINT bar FROM BEGINNING SAMPLE 1 LIMIT 1;
PRINT bar FROM BEGINNING INTERVAL 1 LIMIT 1;
INSERT INTO bar SELECT a,b,CONCAT(CAST(c AS VARCHAR), ' users') ucount FROM baz WINDOW HOPPING (SIZE 1 HOUR , ADVANCE BY 10 DAYS) PARTITION BY b;
CREATE SOURCE CONNECTOR bar WITH (KAFKA_TOPIC='bas');
CREATE SINK CONNECTOR foo WITH(PROPERTY='string', PARTITIONS=1);
DROP CONNECTOR foo;
CREATE STREAM bar WITH (KAFKA_TOPIC='bas');
CREATE TABLE IF NOT EXISTS bar (a VARCHAR KEY, b STRING, c INTEGER, d STRUCT<e ARRAY<STRUCT<f BIGINT, g BOOLEAN, h DOUBLE>>>, i MAP<VARCHAR, INTEGER>) WITH (FORMAT='AVRO', KAFKA_TOPIC='foo');
CREATE TABLE IF NOT EXISTS bar WITH (FORMAT='AVRO') AS SELECT TIMESTAMPTOSTRING(ROWTIME, 'yyyy-MM-dd HH:00:00', 'UTC') AS t, a AS alfla,b,max(c) FROM example GROUP BY a;
CREATE STREAM IF NOT EXISTS `two` WITH (FORMAT='AVRO') AS SELECT d,e,min(f) FROM example JOIN other WITHIN (1 HOUR,1 HOUR) ON (example.a=other.a) WINDOW SESSION (1 MINUTE) WHERE other.column < 1 GROUP BY e LIMIT 10 PARTITION BY d;
